{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","currentPage","perPage","onPageChange","className","classNames","disabled","href","onClick","Math","ceil","map","item","active","items","App","useState","setPerPage","setCurrentPage","setTotal","id","value","defaultValue","onChange","event","parseInt","currentTarget","onSelectChange","htmlFor","page","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EACT,SAAC,GAEiB,IADlBC,EACiB,EADjBA,MAAOC,EACU,EADVA,YAAaC,EACH,EADGA,QAASC,EACZ,EADYA,aAW7B,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAA0B,IAAhBL,IADd,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EAAoB,OAAS,QAC5CO,QAAS,WAlBQ,IAAhBP,GAAqBE,EAAaF,EAAc,IAanD,oBAaDR,EAAW,EAAGgB,KAAKC,KAAKV,EAASE,IAC/BS,KAAI,SAAAC,GAAI,OACP,oBACER,UAAWC,IAAW,YACpB,CAAEQ,OAAQZ,IAAgBW,IAF9B,SAME,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,IACLC,QAAS,WACPL,EAAaS,IALjB,SAQGA,KAXE,MAiBX,oBAAIR,UAAWC,IAAW,YACxB,CAAEC,SAAUL,IAAgBQ,KAAKC,KAAKV,EAASE,KADjD,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeN,IAAgBQ,KAAKC,KAAKV,EAASE,GAC9C,OAAS,QACbM,QAAS,WArDRP,IAAgBQ,KAAKC,KAAKV,EAASE,IACvCC,EAAaF,EAAc,IA8C1B,wB,SC7DJa,EAAQrB,EAAW,EAAG,IACzBkB,KAAI,SAAAd,GAAC,qBAAYA,MAEPkB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOhB,EAAP,KAAcmB,EAAd,KAYA,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAH,EACA,IAJH,SAMG,IACAA,EAAcC,EAAUA,EAAU,EAClC,IARH,IAUG,IACAD,IAAgBQ,KAAKC,KAAKV,EAASE,GAChCF,EAAQC,EAAcC,EACzB,IAbH,YAiBA,sBAAKE,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO,EACPC,aAAc,EACdC,SAAU,SAACC,IAnCE,SAACA,GACtBP,EAAWQ,SAASD,EAAME,cAAcL,MAAO,KAC/CF,EAASnB,GACTkB,EAAe,GAiCLS,CAAeH,IAPnB,UAYE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,kBANK,KAUT,uBAAOO,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEJ,MAAOA,EACPE,QAASA,EACTD,YAAaA,EACbE,aAAc,SAAC0B,GACbX,EAAeW,MAInB,6BAjEKf,EAAMgB,MAAM7B,EAAcC,EAAUA,EAASD,EAAcC,GAkE9CS,KAAI,SAACC,GAAD,OAClB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChFlCmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6e84522.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Paginations {\n  total: number\n  currentPage: number\n  perPage: number\n  onPageChange: (page: number) => void\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const Pagination\n  = ({\n    total, currentPage, perPage, onPageChange,\n  }: Paginations) => {\n    function onPrevPage() {\n      return currentPage !== 1 && onPageChange(currentPage - 1);\n    }\n\n    function onNextPage() {\n      return currentPage !== Math.ceil(total / (perPage))\n      && onPageChange(currentPage + 1);\n    }\n\n    return (\n      <ul className=\"pagination\">\n        <li className={classNames('page-item',\n          { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              onPrevPage();\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {getNumbers(1, Math.ceil(total / (perPage)))\n          .map(item => (\n            <li\n              className={classNames('page-item',\n                { active: currentPage === item })}\n              key={1}\n            >\n\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href=\"#\"\n                onClick={() => {\n                  onPageChange(item);\n                }}\n              >\n                {item}\n              </a>\n\n            </li>\n          ))}\n\n        <li className={classNames('page-item',\n          { disabled: currentPage === Math.ceil(total / (perPage)) })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === Math.ceil(total / (perPage))\n              ? 'true' : 'false'}\n            onClick={() => {\n              onNextPage();\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    );\n  };\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(42);\n\n  const itemsToPrint = () => {\n    return items.slice(currentPage * perPage - perPage, currentPage * perPage);\n  };\n\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(event.currentTarget.value, 10));\n    setTotal(total);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {currentPage * perPage - perPage + 1}\n        {' '}\n        -\n        {' '}\n        {currentPage === Math.ceil(total / (perPage))\n          ? total : currentPage * perPage}\n        {' '}\n        of 42)\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={this}\n            defaultValue={5}\n            onChange={(event) => {\n              onSelectChange(event);\n            }}\n            key={this}\n          >\n\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {itemsToPrint().map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}