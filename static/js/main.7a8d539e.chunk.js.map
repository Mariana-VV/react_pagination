{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","currentPage","perPage","onPageChange","className","classNames","disabled","href","onClick","Math","ceil","map","item","active","items","App","useState","setPerPage","setCurrentPage","setTotal","id","defaultValue","onChange","event","parseInt","currentTarget","value","htmlFor","slice","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAAa,SAAC,GAKP,IAJlBC,EAIiB,EAJjBA,MACAC,EAGiB,EAHjBA,YACAC,EAEiB,EAFjBA,QACAC,EACiB,EADjBA,aAWA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAA0B,IAAhBL,IADd,SAGE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBN,EAAoB,OAAS,QAC5CO,QAnBR,WACE,OAAuB,IAAhBP,GAAqBE,EAAaF,EAAc,IAanD,oBAWDR,EAAW,EAAGgB,KAAKC,KAAKV,EAASE,IAC/BS,KAAI,SAAAC,GAAI,OACP,oBACER,UAAWC,IAAW,YACpB,CAAEQ,OAAQZ,IAAgBW,IAF9B,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMN,GACVO,QAAS,WACPL,EAAaS,IALjB,SAQGA,KAVEA,MAeX,oBAAIR,UAAWC,IAAW,YACxB,CAAEC,SAAUL,IAAgBQ,KAAKC,KAAKV,EAASE,KADjD,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeN,IAAgBQ,KAAKC,KAAKV,EAASE,GAClDM,QAjDR,WACE,OAAOP,IAAgBQ,KAAKC,KAAKV,EAASE,IACrCC,EAAaF,EAAc,IA0C5B,wBCvDFa,EAAQrB,EAAW,EAAG,IACzBkB,KAAI,SAAAd,GAAC,qBAAYA,MAEPkB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBe,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACA,EAA0BF,mBARV,IAQhB,mBAAOhB,EAAP,KAAcmB,EAAd,KAYA,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACiCA,EAAcC,EAAUA,EAAU,EADnE,cAEID,IAAgBQ,KAAKC,KAAKV,EAASE,GAAYF,EAAQC,EAAcC,EAFzE,aAKA,sBAAKE,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,aAAc,EACdC,SAtBa,SAACC,GACtBN,EAAWO,SAASD,EAAME,cAAcC,MAAO,KAC/CP,EAASnB,GACTkB,EAAe,IAcT,UASE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEJ,MAAOA,EACPE,QAASA,EACTD,YAAaA,EACbE,aAAce,IAGhB,6BAhDKJ,EAAMc,MAAM3B,EAAcC,EAAUA,EAASD,EAAcC,GAiD9CS,KAAI,SAACC,GAAD,OAClB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjElCiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7a8d539e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Paginations {\n  total: number\n  currentPage: number\n  perPage: number\n  onPageChange: (page: number) => void\n}\n\nexport const Pagination = ({\n  total,\n  currentPage,\n  perPage,\n  onPageChange,\n}: Paginations) => {\n  function onPrevPage() {\n    return currentPage !== 1 && onPageChange(currentPage - 1);\n  }\n\n  function onNextPage() {\n    return currentPage !== Math.ceil(total / (perPage))\n      && onPageChange(currentPage + 1);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item',\n        { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={onPrevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, Math.ceil(total / (perPage)))\n        .map(item => (\n          <li\n            className={classNames('page-item',\n              { active: currentPage === item })}\n            key={item}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${currentPage}`}\n              onClick={() => {\n                onPageChange(item);\n              }}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n\n      <li className={classNames('page-item',\n        { disabled: currentPage === Math.ceil(total / (perPage)) })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === Math.ceil(total / (perPage))}\n          onClick={onNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst LAST_ITEM = 42;\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(LAST_ITEM);\n\n  const itemsToPrint = () => {\n    return items.slice(currentPage * perPage - perPage, currentPage * perPage);\n  };\n\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(event.currentTarget.value, 10));\n    setTotal(total);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${currentPage * perPage - perPage + 1} - ${\n          currentPage === Math.ceil(total / (perPage)) ? total : currentPage * perPage} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={onSelectChange}\n            // key={perPage}\n          >\n\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {itemsToPrint().map((item) => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}